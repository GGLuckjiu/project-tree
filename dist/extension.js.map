{"version":3,"sources":["../webpack/bootstrap","../external \"fs\"","../external \"path\"",".././src/extension.ts","../external \"vscode\"",".././src/index.ts",".././src/traverse.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","vscode","index_1","activate","context","console","log","disposable","commands","registerCommand","default","action","window","showInformationMessage","subscriptions","push","deactivate","traverse_1","path_1","fs_1","[object Object]","_vscode","this","workspace","folder","rootPath","replace","levInfos","traverse","maxLength","lines","map","pathName","level","line","Array","join","lineName","length","initContext","maxLen","commentDistance","getConfiguration","forEach","item","initLines","appendFileSync","resolve","ignoreList","ancestor","callback","acPath","readdirSync","statSync","isDirectory","indexOf"],"mappings":"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","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport Entry from './index';\n\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n    // Use the console to output diagnostic information (console.log) and errors (console.error)\n    // This line of code will only be executed once when your extension is activated\n    console.log(\n        'Congratulations, your extension \"project-tree\" is now active!'\n    );\n\n    // The command has been defined in the package.json file\n    // Now provide the implementation of the command with registerCommand\n    // The commandId parameter must match the command field in package.json\n    let disposable = vscode.commands.registerCommand(\n        'extension.ProjectTree',\n        () => {\n            // The code you place here will be executed every time your command is executed\n            new Entry(vscode).action();\n            // Display a message box to the user\n            vscode.window.showInformationMessage('Project Tree!');\n        }\n    );\n\n    context.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","import { WorkspaceConfiguration } from 'vscode';\r\nimport { traverse } from './traverse';\r\nimport { resolve } from 'path';\r\nimport { appendFileSync } from 'fs';\r\nimport { LevInfo } from './type';\r\n\r\nexport default class {\r\n    private vscode: any;\r\n    private folder: string;\r\n    private name: string;\r\n    private levInfos: LevInfo[];\r\n    private lines!: string[];\r\n    private context!: string;\r\n    constructor(_vscode: any) {\r\n        this.vscode = _vscode;\r\n        this.name = _vscode.workspace.name;\r\n        this.folder = _vscode.workspace.rootPath.replace(this.name, '');\r\n        this.levInfos = traverse(this.folder, this.name, 0) || [];\r\n    }\r\n    initLines(): void {\r\n        let maxLength: number = 0;\r\n        this.lines = this.levInfos.map(({ pathName, level }: LevInfo) => {\r\n            let line: string = '';\r\n            line += new Array(level).join('| ');\r\n            line += level === 0 ? '' : '|-';\r\n            const lineName = line + pathName;\r\n            maxLength =\r\n                lineName.length > maxLength ? lineName.length : maxLength;\r\n            return lineName;\r\n        });\r\n        this.initContext(maxLength);\r\n    }\r\n    initContext(maxLen: number): void {\r\n        const configuration: WorkspaceConfiguration = this.vscode.workspace.getConfiguration();\r\n        let commentDistance: number =\r\n            configuration.get('ProjectTree.commentDistance') || 1;\r\n        this.context = '\\r\\n```\\r\\n';\r\n        this.lines.forEach((item: string) => {\r\n            this.context += `${item}${new Array(\r\n                maxLen - item.length + 1 + commentDistance\r\n            ).join(' ')}//\\r\\n`;\r\n        });\r\n        this.context += '\\r\\n```';\r\n    }\r\n    action(): void {\r\n        this.initLines();\r\n        appendFileSync(\r\n            resolve(this.vscode.workspace.rootPath, 'README.md'),\r\n            this.context\r\n        );\r\n    }\r\n}\r\n","import { readdirSync, statSync, Stats } from 'fs';\r\nimport { resolve } from 'path';\r\nimport { LevInfo } from './type';\r\nconst ignoreList: string[] = ['node_modules', 'hooks', '.git'];\r\nlet levInfos: LevInfo[] = [];\r\n/**\r\n * 遍历文件夹下所有文件文件夹\r\n * @param ancestor 父级路径\r\n * @param pathName 当前层级名\r\n * @param level 当前层级数\r\n * @param callback 每一层的回调\r\n */\r\nexport function traverse(\r\n    ancestor: string,\r\n    pathName: string = '',\r\n    level: number = 0,\r\n    callback: Function = function() {}\r\n) {\r\n    const acPath: string = resolve(ancestor, pathName);\r\n    levInfos.push({\r\n        level,\r\n        ancestor,\r\n        pathName\r\n    });\r\n    callback(ancestor, pathName, level);\r\n    const files: string[] = readdirSync(acPath);\r\n    files.forEach((item: string) => {\r\n        const fileStat: Stats = statSync(resolve(acPath, item));\r\n        if (fileStat.isDirectory() && !~ignoreList.indexOf(item)) {\r\n            traverse(acPath, item, level + 1, callback);\r\n        } else {\r\n            levInfos.push({\r\n                level: level + 1,\r\n                ancestor: acPath,\r\n                pathName: item\r\n            });\r\n            callback(acPath, item, level + 1);\r\n        }\r\n    });\r\n    if (level === 0) {\r\n        return levInfos;\r\n    }\r\n}\r\n"],"sourceRoot":""}