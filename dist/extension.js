module.exports=function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=2)}([function(e,t){e.exports=require("fs")},function(e,t){e.exports=require("path")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(3),r=n(4);t.activate=function(e){console.log('Congratulations, your extension "project-tree" is now active!');let t=o.commands.registerCommand("extension.ProjectTree",()=>{new r.default(o).action(),o.window.showInformationMessage("Project Tree!")});e.subscriptions.push(t)},t.deactivate=function(){}},function(e,t){e.exports=require("vscode")},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(5),r=n(1),i=n(0);t.default=class{constructor(e){this.vscode=e,this.name=e.workspace.name,this.folder=e.workspace.rootPath.replace(this.name,""),this.levInfos=o.traverse(this.folder,this.name,0)||[]}initLines(){let e=0;this.lines=this.levInfos.map(({pathName:t,level:n})=>{let o="";o+=new Array(n).join("| ");const r=(o+=0===n?"":"|-")+t;return e=r.length>e?r.length:e,r}),this.initContext(e)}initContext(e){let t=this.vscode.workspace.getConfiguration().get("ProjectTree.commentDistance")||1;this.context="\r\n```\r\n",this.lines.forEach(n=>{this.context+=`${n}${new Array(e-n.length+1+t).join(" ")}//\r\n`}),this.context+="\r\n```"}action(){this.initLines(),i.appendFileSync(r.resolve(this.vscode.workspace.rootPath,"README.md"),this.context)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});const o=n(0),r=n(1),i=["node_modules","hooks",".git"];let s=[];t.traverse=function e(t,n="",c=0,u=function(){}){const a=r.resolve(t,n);if(s.push({level:c,ancestor:t,pathName:n}),u(t,n,c),o.readdirSync(a).forEach(t=>{o.statSync(r.resolve(a,t)).isDirectory()&&!~i.indexOf(t)?e(a,t,c+1,u):(s.push({level:c+1,ancestor:a,pathName:t}),u(a,t,c+1))}),0===c)return s}}]);
//# sourceMappingURL=extension.js.map